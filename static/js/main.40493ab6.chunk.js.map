{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","components/Modal/Modal.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovieRequest","movieTitle","a","fetch","response","json","FindMovie","addMovie","useState","query","setQuery","setMovie","errorMessage","setErrorMessage","onFind","useCallback","trim","searchMovie","result","Response","onFormAdd","event","preventDefault","onSubmit","htmlFor","type","id","placeholder","classNames","length","value","onChange","e","target","onClick","disabled","Modal","isVisibleModal","setIsVisibleModal","style","fontSize","color","App","setMovies","newMovie","every","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40493ab6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=e368ee7c';\n\nexport const getMovieRequest = async (movieTitle: string) => {\n  const response = await fetch(`${BASE_URL}&t=${movieTitle}`);\n\n  return response.json();\n};\n","import React, { FormEvent, useCallback, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovieRequest } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onFind = useCallback(() => {\n    if (!query.trim()) {\n      setErrorMessage('Please, fill correct');\n    } else {\n      const searchMovie = async () => {\n        const result = await getMovieRequest(query);\n\n        if (result.Response === 'True') {\n          setMovie(result);\n          setErrorMessage('');\n        } else {\n          setErrorMessage('Cant find a movie with this title');\n        }\n      };\n\n      searchMovie();\n    }\n  }, [query]);\n\n  const onFormAdd = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (!errorMessage && movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  }, [movie, errorMessage]);\n\n  return (\n    <>\n      <form\n        onSubmit={onFormAdd}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': errorMessage.length },\n              )}\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n                setErrorMessage('');\n              }}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFind}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={!!errorMessage.length}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            movie={movie}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  isVisibleModal: boolean\n  setIsVisibleModal: (boolVal: boolean) => void,\n};\n\nexport const Modal: React.FC<Props> = ({\n  isVisibleModal,\n  setIsVisibleModal,\n}) => {\n  return (\n    <div className={classNames(\n      'modal',\n      { 'is-active': isVisibleModal },\n    )}\n    >\n      <div className=\"modal-background\" />\n      <div className=\"modal-content\">\n        <p\n          style={{ fontSize: '50px', color: 'white' }}\n        >\n          Film is already in the list\n        </p>\n      </div>\n      <button\n        type=\"button\"\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={() => setIsVisibleModal(false)}\n      />\n    </div>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Modal } from './components/Modal/Modal';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbID !== newMovie.imdbID)) {\n      setMovies(\n        [...movies, newMovie],\n      );\n    } else {\n      setIsVisibleModal(true);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n\n      <Modal\n        isVisibleModal={isVisibleModal}\n        setIsVisibleModal={setIsVisibleModal}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}